1. In words, list 3 reasons why structs are different from resources.
     You can copy, overwrite, and create structs anytime you want. These things are not possible with resources. 

2. Describe a situation where a resource might be better to use than a struct.
     Anytime you are creating non-fungible tokens, because with nfts it is important that the data cannot be overwritten. 

3. What is the keyword to make a new resource?
    Create

4. Can a resource be created in a script or transaction (assuming there isn't a public function to create one)?
  No. The create function used to make a resource can only be used inside the contract. 
  
5. What is the type of the resource below?

          pub resource Jacob {

          }

          This is a Jacob type

6. 

pub contract Test {

    // Hint: There's nothing wrong here ;)
    pub resource Jacob {
        pub let rocks: Bool
        init() {
            self.rocks = true
        }
    }

// Incorrect function
    pub fun createJacob(): Jacob { // there is 1 here
        let myJacob = Jacob() // there are 2 here
        return myJacob // there is 1 here
    }
}

// Corrected function
      pub fun createJacob(): @Jacob { // resource types must have the @ symbol in front to say "this is a resource"
             let myJacob <- Jacob() // remove = and use the move operator:  '<-'
             return <- myJacob // use move operator '<-'
         }
     }
